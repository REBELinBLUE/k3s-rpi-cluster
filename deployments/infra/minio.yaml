---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio
  namespace: infra
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: infra
  labels:
    app: minio
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  namespace: infra
  labels:
    app: minio
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClass: traefik
  rules:
    - host: minio.cluster.rebelinblue.com
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 9000
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - minio.cluster.rebelinblue.com
      secretName: minio-tls
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
  namespace: infra
  labels:
    app: minio
spec:
  storageClassName: nfs-hdd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: infra
  labels:
    app: minio
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      annotations:
        SECRET_MINIO_ACCESS_KEY: /apps/shared/minio/accesskey
        SECRET_MINIO_SECRET_KEY: /apps/shared/minio/secretkey
      name: minio
      labels:
        app: minio
    spec:
      serviceAccountName: minio
      initContainers:
        - name: init
          image: rebelinblue/vault-consumer:0.0.2
          imagePullPolicy: IfNotPresent
          env:
            - name: VAULT_ROLE_ID
              valueFrom:
                secretKeyRef:
                  key: role_id
                  name: minio-approle
            - name: VAULT_SECRET_ID
              valueFrom:
                secretKeyRef:
                  key: secret_id
                  name: minio-approle
          volumeMounts:
            - mountPath: /env
              name: env
            - mountPath: /tmpfs
              name: podinfo
      containers:
        - name: minio
          image: jessestuart/minio:RELEASE.2020-02-07T23-28-16Z-arm
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -ce
          args:
            - source /env/secrets;
              /usr/bin/docker-entrypoint.sh minio -C /root/.minio/ server /export
          ports:
            - name: service
              containerPort: 9000
          env:
            - name: MINIO_BROWSER
              value: "on"
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: service
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: service
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              memory: 350Mi
              cpu: 25m
            limits:
              memory: 500Mi
          volumeMounts:
            - name: export
              mountPath: /export
            - name: minio-config-dir
              mountPath: /root/.minio/
            - mountPath: /env
              name: env
      volumes:
        - name: env
          emptyDir: {}
        - name: podinfo
          downwardAPI:
            defaultMode: 420
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations
                path: annotations
        - name: export
          persistentVolumeClaim:
            claimName: minio
        - name: minio-config-dir
          emptyDir: {}
