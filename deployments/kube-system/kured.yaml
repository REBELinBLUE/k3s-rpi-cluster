---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kured
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kured
  labels:
    app: kured
rules:
  # Allow kured to read spec.unschedulable
  # Allow kubectl to drain/uncordon
  #
  # NB: These permissions are tightly coupled to the bundled version of kubectl; the ones below
  # match https://github.com/kubernetes/kubernetes/blob/v1.12.1/pkg/kubectl/cmd/drain.go
  #
  - apiGroups: [""]
    resources: ["nodes"]
    verbs:     ["get", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs:     ["list","delete","get"]
  - apiGroups: ["extensions"]
    resources: ["daemonsets"]
    verbs:     ["get"]
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    verbs:     ["get"]
  - apiGroups: [""]
    resources: ["pods/eviction"]
    verbs:     ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kured
  labels:
    app: kured
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kured
subjects:
  - kind: ServiceAccount
    name: kured
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-system
  name: kured
  labels:
    app: kured
rules:
  # Allow kured to lock/unlock itself
  - apiGroups:     ["extensions"]
    resources:     ["daemonsets"]
    resourceNames: ["kured"]
    verbs:         ["update", "patch"]
  - apiGroups:     ["apps"]
    resources:     ["daemonsets"]
    resourceNames: ["kured"]
    verbs:         ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kube-system
  name: kured
  labels:
    app: kured
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: kured
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kured
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kured
  namespace: kube-system
  labels:
    app: kured
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: kured
  template:
    metadata:
      labels:
        app: kured
      annotations:
        SECRET_SLACK_URL: /apps/shared/slack/slack_url
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: kured
      hostPID: true
      restartPolicy: Always
      initContainers:
        - name: init
          image: rebelinblue/vault-consumer:0.0.2
          imagePullPolicy: IfNotPresent
          env:
            - name: VAULT_ROLE_ID
              valueFrom:
                secretKeyRef:
                  key: role_id
                  name: kured-approle
            - name: VAULT_SECRET_ID
              valueFrom:
                secretKeyRef:
                  key: secret_id
                  name: kured-approle
          volumeMounts:
            - mountPath: /env
              name: env
            - mountPath: /tmpfs
              name: podinfo
      containers:
        - name: kured
          image: rebelinblue/kured:1.4.0
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true # Give permission to nsenter /proc/1/ns/mnt
          command:
            - bash
            - -c
          args:
            - source /env/secrets; /usr/bin/kured
                --period=1h0m0s --ds-name=kured --ds-namespace=kube-system
                --prometheus-url=http://prometheus.monitoring.svc.cluster.local:8080
                --alert-filter-regexp="^Reboot Required$"
                --slack-hook-url=$SLACK_URL
          ports:
            - containerPort: 8080
              name: metrics
          env:
            # Pass in the name of the node on which this pod is scheduled
            # for use with drain/uncordon operations and lock acquisition
            - name: KURED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /env
              name: env
      volumes:
        - name: env
          emptyDir: {}
        - name: podinfo
          downwardAPI:
            defaultMode: 420
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations
                path: annotations
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
